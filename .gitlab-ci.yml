stages:
  - docker-image-build
  - build
  - deploy


variables:
  PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/pip"
  DOCKER_IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  DOCKER_TLS_CERTDIR: "/certs"


build-and-push-build-image:
  stage: docker-image-build

  image: docker:latest
  services:
    - docker:dind
  script:
    - echo Creating Docker image $DOCKER_IMAGE_TAG
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $DOCKER_IMAGE_TAG docker-build
    - docker push $DOCKER_IMAGE_TAG

  rules:
    - changes:
      - docker-build/Dockerfile


site-build:
  stage: build
  image: $DOCKER_IMAGE_TAG
  cache:
    key: site-build-${CI_COMMIT_REF_SLUG}
    paths:
      - .cache/pip
      - .venv
  before_script:
    - poetry --version
    - poetry config virtualenvs.in-project true
    - poetry install -vv
  script:
    - cd site
    - poetry run make html
  artifacts:
    paths:
      - site/build/html


pages:
  stage: deploy
  image: alpine
  script:
    - cp -r site/build/html public
  artifacts:
    paths:
      - public
  only:
    variables:
      - $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

